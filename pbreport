#!/bin/bash
#0.12.1 Fixing Windows perfmon data extraction and canvas graphics
#1.0.0 Fiting pbreport to FTP2 server. Now this application becomes very specific and customization the Customer variable is necessary to accept other environments and sites. Previous configuration is commented.
VERSION="1.0.0(linux)"

echo "Extension: " $EXTENSION;
echo "pbreport version " $VERSION;
echo "Assessing pButtons files in folder " $1;
if [ ! $(ls -A $1) ]; then
	echo "There is no pButtons in $1 Please try again later.";
	exit;
fi
Files=($(ls $1)); # store all the file name application will process
NumberFiles=$(echo ${#Files[@]}) #Count number of files

prefixFolder=$(echo ${Files[0]} | awk -F"_" 'BEGIN{OFS="_"}{print $1,$2,substr($3,0,6)}');
ServerName=$(echo $prefixFolder | awk -F"_" '{print $2}');

echo "Creating rawdata folder:";
DataFolder=$1/../$prefixFolder"_rawdata";
if [ ! -d $DataFolder ]; then
        echo $DataFolder;
        mkdir $DataFolder;
else
	echo "Folder $DataFolder already exist! Skiping make dir."
fi

echo "Creating processed files folder";
#Customer=$(awk -F":" '{ if($1 ~ /Customer/) {print $2; exit} }' $1"/"${Files[0]} | awk '{ if($1 == "St." || $1 == "UC") {sub(/\./, "",$1); print $1"_"$2} else if($1 == "MN") {print "Stanford"} else print $1 }')
Customer=$(echo $1 | awk -F"/" '{print $3}')
echo "Customer: " $Customer;
CustomerFolder="/pbuttons/"$Customer;
#ProcessedFolder=$CustomerFolder"/"$prefixFolder"_processed_pbuttons";
if [ ! -d $CustomerFolder ]; then
        echo "This is a new customer. Creating a folder: "$CustomerFolder;
        mkdir $CustomerFolder
fi

#Creating a folder per month 
ProcessedFolder=$CustomerFolder"/"$prefixFolder"_processed_pbuttons";
if [ ! -d $ProcessedFolder ]; then
        echo "This/these pButtons is/are from a month non-existing in this server. Creating a folder: "$ProcessedFolder;
        mkdir $ProcessedFolder;
fi

#Creating an independent folder for graphics
graphicFolder=$CustomerFolder"/"$prefixFolder"_graphics";
if [ ! -d $graphicFolder ]; then
        echo "Creating an independent folder for the graphics. Creating a folder: "$graphicFolder;
        mkdir $graphicFolder;
fi

echo "Retriving production name:";
Production=$(echo ${Files[0]} | cut -d "_" -f 2);
echo $Production;

#Define source operating system
OS=$(awk -F":" 'BEGIN{os="unk"}{ if($1 ~ /Version String/ && $2 ~ /Linux/) {os="lnx"; exit} else if ($1 ~ /Version String/ && $2 ~ /AIX/){os="aix";exit;} else if ($1 ~ /Version String/ && $2 ~ /HP-UX/){os="hpux";exit;} else if ($1 ~ /Version String/ && $2 ~ /Windows/){os="win";exit;} }END{print os}' $1"/"${Files[0]})
echo "Operating System is " $OS

#if [ $OS == "aix" ]; then
#	Cores=$(awk -F":" '{if($0 ~ /Number Of Processors/) {gsub(/ /, ""); print $2; exit}}' $1"/"${Files[0]})
#elif [ $OS == "lnx" ]; then
#	Cores=$(awk -F"\t" '{ 
#                        if(core_imprime == 1){
#				split($5, core, " ");
#				print core[1];
#				exit;
#                        }
#                        if($0 ~ /id=sar-u/) core_imprime = 1;
#		}' $1"/"${Files[0]})
#elif [ $OS == "hpux" ]; then
#	Cores=$(awk -F":" '{if($0 ~ /cstat_5_1/){ if($3 ~ /NUMCPU/){gsub(/ /, ""); print $4; exit;}}}' $1"/"${Files[0]})
#elif [ $OS == "win" ]; then
#    Cores=$(awk -F"," '{if($0 ~ /numberofcpus/){ split($6,cpu,"="); print cpu[2]; exit;}}' $1"/"${Files[0]})
#fi
#echo "Server has " $Cores " cores available."
#exit;

if [ $OS != "win" ]; then
    source /usr/local/bin/pbreportlib/CreateFiles.sh
fi

source /usr/local/bin/pbreportlib/CreateMgStatFiles.sh

echo "Gathering data from pButtons."
CountFile=0;

if [ $OS == "aix" ]; then

	source /usr/local/bin/pbreportlib/aix.sh

elif [ $OS == "lnx" ]; then

	source /usr/local/bin/pbreportlib/linux.sh

elif [ $OS == "hpux" ]; then

	source /usr/local/bin/pbreportlib/aix.sh

elif [ $OS == "win" ]; then

	source /usr/local/bin/pbreportlib/win.sh
	
fi

#Calculate Standard Deviation
#source /usr/local/bin/pbreportlib/standardDeviation.sh

#Build Graphics
if [ $GRAPHICS == "gnuplot" ]; then

    source /usr/local/bin/pbreportlib/graphic_gnuplot.sh

else    

    source /usr/local/bin/pbreportlib/graphic_canvasjs.sh
    
fi

cp -v /usr/local/bin/pbreportlib/canvasjs.min.js $graphicFolder;
